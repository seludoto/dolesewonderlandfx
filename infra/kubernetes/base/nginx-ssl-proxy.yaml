apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ssl-proxy
  namespace: dolesewonderlandfx
  labels:
    app: nginx-ssl-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-ssl-proxy
  template:
    metadata:
      labels:
        app: nginx-ssl-proxy
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: ssl-certs
          mountPath: /etc/ssl/certs
        - name: ssl-private
          mountPath: /etc/ssl/private
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-ssl-config
      - name: ssl-certs
        secret:
          secretName: ssl-cert
      - name: ssl-private
        secret:
          secretName: ssl-cert
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ssl-proxy
  namespace: dolesewonderlandfx
  labels:
    app: nginx-ssl-proxy
spec:
  selector:
    app: nginx-ssl-proxy
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-ssl-config
  namespace: dolesewonderlandfx
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    http {
      upstream api_backend {
        server 192.241.154.140:31373;
      }
      upstream auth_backend {
        server 192.241.154.140:31282;
      }

      server {
        listen 80;
        server_name api.dolesewonderlandfx.me;
        return 301 https://$server_name$request_uri;
      }

      server {
        listen 80;
        server_name auth.dolesewonderlandfx.me;
        return 301 https://$server_name$request_uri;
      }

      server {
        listen 443 ssl http2;
        server_name api.dolesewonderlandfx.me;

        ssl_certificate /etc/ssl/certs/tls.crt;
        ssl_certificate_key /etc/ssl/private/tls.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
          proxy_pass http://api_backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }

      server {
        listen 443 ssl http2;
        server_name auth.dolesewonderlandfx.me;

        ssl_certificate /etc/ssl/certs/tls.crt;
        ssl_certificate_key /etc/ssl/private/tls.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
          proxy_pass http://auth_backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }