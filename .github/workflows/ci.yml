name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=services --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy

    - name: Run linting
      run: |
        flake8 services/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 services/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        black --check services/ tests/
        isort --check-only services/ tests/

  frontend-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install frontend dependencies
      run: |
        cd apps/web-landing && npm ci
        cd ../app-frontend && npm ci

    - name: Run frontend tests
      run: |
        cd apps/web-landing && npm test
        cd ../app-frontend && npm test

    - name: Build frontends
      run: |
        cd apps/web-landing && npm run build
        cd ../app-frontend && npm run build
